version: '3.4'

services:
  bookingsystem.api:
    image: ${DOCKER_REGISTRY-}bookingsystemapi
    environment:
      ConnectionStrings__DbConnection: "Server = database; Port = 5432; Database = BookingSystemDB; User Id = postgres; Password = postgres"
    build:
      context: .
      dockerfile: BookingSystem.Api/Dockerfile

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    environment:
        ALLOW_ANONYMOUS_LOGIN: yes

  message_broker:
    image: ${DOCKER_REGISTRY-}bitnami/kafka
    environment:
        KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper
        KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
        KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://message_broker:9092
        KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
        # JMX_PORT: 9997
        # KAFKA_CFG_PROCESS_ROLES: controller,broker
        # KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
    depends_on:
        - zookeeper

  kafka_ui:
    container_name: kafka-ui
    image: ${DOCKER_REGISTRY-}provectuslabs/kafka-ui
    ports:
        - 8080:8080
    environment:
        KAFKA_CLUSTERS_0_NAME: transitional_path
        KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: message_broker:9092
        KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
        KAFKA_CLUSTERS_0_JMXPORT: 9997
        DYNAMIC_CONFIG_ENABLED: true
    depends_on: 
        - message_broker

  database:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: BookingSystemDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5433:5432

